# -*- coding:utf-8 -*-
from mako import runtime, filters, cache
UNDEFINED = runtime.UNDEFINED
STOP_RENDERING = runtime.STOP_RENDERING
__M_dict_builtin = dict
__M_locals_builtin = locals
_magic_number = 10
_modified_time = 1555586705.348
_enable_loop = True
_template_filename = 'D:/py-workspace/LanhuSaas/framework/templates/custom_query/custom_query.html'
_template_uri = './custom_query/custom_query.html'
_source_encoding = 'utf-8'
_exports = []


def render_body(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_locals = __M_dict_builtin(pageargs=pageargs)
        STATIC_URL = context.get('STATIC_URL', UNDEFINED)
        SITE_URL = context.get('SITE_URL', UNDEFINED)
        __M_writer = context.writer()
        __M_writer(u'<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset="UTF-8">\r\n    <!-- \u5f00\u53d1\u73af\u5883\u7248\u672c\uff0c\u5305\u542b\u4e86\u6709\u5e2e\u52a9\u7684\u547d\u4ee4\u884c\u8b66\u544a--2.5.51 -->\r\n    <script src="')
        __M_writer(unicode(STATIC_URL))
        __M_writer(u'assets/vue-2.5.21/vue.development.js"></script>\r\n    <!-- element UI\u5f15\u5165\u6837\u5f0f -->\r\n    <link rel="stylesheet" href="')
        __M_writer(unicode(STATIC_URL))
        __M_writer(u'assets/element-2.4.11/index.css">\r\n    <!-- element UI\u5f15\u5165\u7ec4\u4ef6\u5e93 -->\r\n    <script src="')
        __M_writer(unicode(STATIC_URL))
        __M_writer(u'assets/element-2.4.11/index.js"></script>\r\n    <!--axios.min.js--vue.js\u7684ajax\u652f\u6301-->\r\n    <script src="')
        __M_writer(unicode(STATIC_URL))
        __M_writer(u'assets/vue-2.5.21/axios.min.js"></script>\r\n    <script src="')
        __M_writer(unicode(STATIC_URL))
        __M_writer(u'assets/jquery/jquery-3.1.1.min.js"></script>\r\n    <script type="text/javascript" src="')
        __M_writer(unicode(STATIC_URL))
        __M_writer(u'assets/echarts/echarts.js"></script>\r\n    <script type="text/javascript" src="')
        __M_writer(unicode(STATIC_URL))
        __M_writer(u'assets/echarts/macarons.js"></script>\r\n    <link rel="stylesheet" href="')
        __M_writer(unicode(STATIC_URL))
        __M_writer(u'css/alertRuleManage/alertRuleManage.css">\r\n    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/v-charts/lib/style.min.css">\r\n    <style type="text/css">\r\n        .thRow th {\r\n            padding: 0;\r\n        }\r\n\r\n        .dialog_height {\r\n            height: 50%;\r\n            overflow:scroll;\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<body>\r\n<div id="customQueryManage">\r\n    <el-row>\r\n        <el-col :span="24">\r\n            <el-breadcrumb separator-class="el-icon-arrow-right">\r\n                <el-breadcrumb-item>\u9996\u9875</el-breadcrumb-item>\r\n                <el-breadcrumb-item>\u81ea\u5b9a\u4e49\u67e5\u8be2</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </el-col>\r\n    </el-row>\r\n    <el-card>\r\n        <!--\u8868\u5355\u5c55\u793a-->\r\n        <div v-if="customQueryTableStatus == \'list\'">\r\n            <el-row>\r\n                <el-col :span="24">\r\n                    <div style="font-weight: bold">\u81ea\u5b9a\u4e49\u67e5\u8be2\u5217\u8868</div>\r\n                    <hr>\r\n                </el-col>\r\n            </el-row>\r\n            <el-row type="flex" justify="space-between" align="center" class="row">\r\n                <el-col :span="12">\r\n                    <el-col :span="9">\r\n                        <el-input v-model="queryNameSearch" size="medium" placeholder="\u8bf7\u8f93\u5165\u67e5\u8be2\u540d\u79f0"></el-input>\r\n                    </el-col>\r\n                    <el-col :span="3">\r\n                        <el-button type="primary" size="medium" icon="el-icon-search" v-on:click="customQuerySearch">\r\n                            \u641c\u7d22\r\n                        </el-button>\r\n                    </el-col>\r\n                </el-col>\r\n                <el-col :span=\'12\' style="text-align: right">\r\n                    <el-button type=\'primary\' size="medium" @click=\'customQueryAdd\'>\u65b0\u589e\u81ea\u5b9a\u4e49\u67e5\u8be2</el-button>\r\n                </el-col>\r\n            </el-row>\r\n            <el-table :data="customQueryTableData">\r\n                <el-table-column prop="id" label="\u5e8f\u53f7" width="100">\r\n                </el-table-column>\r\n                <el-table-column prop="query_name" label="\u67e5\u8be2\u540d\u79f0" width="200" align="center">\r\n                </el-table-column>\r\n                <el-table-column prop="show_type" label="\u663e\u793a\u7c7b\u578b" width="200" align="center">\r\n                </el-table-column>\r\n                <el-table-column prop="query_sql" label="\u67e5\u8be2SQL" width="600" align="center">\r\n                </el-table-column>\r\n                <el-table-column prop="operation" label="\u64cd\u4f5c" width="300" align="center">\r\n                    <template slot-scope="scope">\r\n                        <el-button type="text" size="small" @click="customQueryEdit(scope.row.id)">\u7f16\u8f91</el-button>\r\n                        <el-button type="text" size="small" @click="customQueryDelete(scope.row.id)">\u5220\u9664</el-button>\r\n                        <el-button type="text" size="small" @click="customQueryShow(scope.row)">\u5c55\u793a</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <el-pagination :page-count="queryCount" :current-page="currentPage" background layout="prev, pager, next"\r\n                           style="float:right" @current-change="customQueryPageChange"></el-pagination>\r\n        </div>\r\n        <!--\u6570\u636e\u6dfb\u52a0/\u4fee\u6539-->\r\n        <div v-if="customQueryTableStatus == \'add\' || customQueryTableStatus == \'edit\'">\r\n            <el-row>\r\n                <el-col :span="24">\r\n                    <div style="font-weight: bold">\u81ea\u5b9a\u4e49\u67e5\u8be2\u6dfb\u52a0</div>\r\n                    <hr>\r\n                </el-col>\r\n            </el-row>\r\n            <el-form :model="customQueryData" ref="customQueryData" label-position="right"\r\n                     label-width="100px">\r\n                <el-row>\r\n                    <el-col :span="30" :offset="1">\r\n                        <el-form-item label="\u67e5\u8be2\u540d\u79f0:" prop="query_name">\r\n                            <el-input v-model="customQueryData.query_name"></el-input>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                    <el-col :span="30" :offset="1">\r\n                        <el-form-item label="\u6570\u636e\u5e93\u8fde\u63a5:">\r\n                            <el-select v-model="customQueryData.conn_id" filterable placeholder="\u8bf7\u9009\u62e9"\r\n                                       style="width: 100%">\r\n                                <el-option v-for="db in customQueryDatabase" :label="db.label"\r\n                                           :value="db.value"></el-option>\r\n                            </el-select>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                </el-row>\r\n                <el-row>\r\n                    <el-col :span="11" :offset="1">\r\n                        <el-form-item label="\u5c55\u793a\u65b9\u5f0f:" prop="show_type">\r\n                            <el-select v-model="customQueryData.show_type" collapse-tags filterable placeholder="\u8bf7\u9009\u62e9"\r\n                                       style="width: 100%">\r\n                                <el-option v-for="type in customQueryShowType" :key="type" :label="type"\r\n                                           :value="type"></el-option>\r\n                            </el-select>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                </el-row>\r\n                <el-row>\r\n                    <el-col :span="23" :offset="1">\r\n                        <el-form-item label="\u67e5\u8be2SQL:" prop="query_sql">\r\n                            <el-input type="textarea" :rows="5" v-model="customQueryData.query_sql"\r\n                                      @change="add_flag=false"></el-input>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                </el-row>\r\n                <el-row class="alertRuleFormButton">\r\n                    <el-button @click="customQueryList()">\u53d6 \u6d88</el-button>\r\n                    <el-button type="success" @click="sql_test(\'\')">\u9a8c\u8bc1SQL</el-button>\r\n                    <el-button type="primary" @click="customQuerySave(\'customQueryData\')">\u6dfb\u52a0 / \u4fee\u6539</el-button>\r\n                </el-row>\r\n                <el-dialog\r\n                        title="\u67e5\u8be2\u5c55\u793a"\r\n                        :visible.sync="dialogVisible1"\r\n                        width="80%" custom-class="dialog_height">\r\n                    <div id="show1">\r\n                        <el-table\r\n                                :data="tableData"\r\n                                style="width: 100%">\r\n                            <el-table-column\r\n                                    :prop="field"\r\n                                    :label=field\r\n                                    width="TableLength" v-for="field in fileds">\r\n                            </el-table-column>\r\n                        </el-table>\r\n                    </div>\r\n                    <el-button @click="dialogVisible1 = false">\u8fd4\u56de</el-button>\r\n                </el-dialog>\r\n                <el-dialog\r\n                        title="\u67e5\u8be2\u5c55\u793a"\r\n                        :visible.sync="dialogVisible2"\r\n                        width="80%" height="80%" @opened="show_chart">\r\n                    <div id="show2" style="width: 500px;height: 500px">\r\n\r\n                    </div>\r\n                    <el-button @click="dialogVisible2 = false">\u8fd4\u56de</el-button>\r\n                </el-dialog>\r\n            </el-form>\r\n        </div>\r\n    </el-card>\r\n    <el-dialog\r\n            title="\u67e5\u8be2\u5c55\u793a"\r\n            :visible.sync="dialogVisible3"\r\n            width="80%" custom-class="dialog_height">\r\n        <div id="show1">\r\n            <el-table\r\n                    :data="tableData"\r\n                    style="width: 100%">\r\n                <el-table-column\r\n                        :prop="field"\r\n                        :label=field\r\n                        width="TableLength" v-for="field in fileds">\r\n                </el-table-column>\r\n            </el-table>\r\n        </div>\r\n        <el-button @click="dialogVisible3 = false">\u8fd4\u56de</el-button>\r\n    </el-dialog>\r\n    <el-dialog\r\n            title="\u67e5\u8be2\u5c55\u793a"\r\n            :visible.sync="dialogVisible4"\r\n            width="80%" height="80%" @opened="show_chart">\r\n        <div id="show2" style="width: 500px;height: 500px">\r\n\r\n        </div>\r\n        <el-button @click="dialogVisible4 = false">\u8fd4\u56de</el-button>\r\n    </el-dialog>\r\n</div>\r\n\r\n<script type="text/javascript">\r\n    //csrf\u9a8c\u8bc1\r\n    axios.interceptors.request.use((config) => {\r\n        config.headers[\'X-Requested-With\'] = \'XMLHttpRequest\';\r\n        let regex = /.*csrftoken=([^;.]*).*$/; // \u7528\u4e8e\u4ececookie\u4e2d\u5339\u914d csrftoken\u503c\r\n        config.headers[\'X-CSRFToken\'] = document.cookie.match(regex) === null ? null : document.cookie.match(regex)[1];\r\n        return config\r\n    });\r\n    var vue = new Vue({\r\n            el: \'#customQueryManage\',\r\n            data: {\r\n                dialogVisible1: false,\r\n                dialogVisible2: false,\r\n                dialogVisible3: false,\r\n                dialogVisible4: false,\r\n                customQueryDatabase: [],\r\n                tableData: [],\r\n                //\u7075\u6d3b\u5f97\u5230\u7ed3\u679c\u96c6\u7684\u5217\u540d\r\n                fileds: [],\r\n                //echart\u5bf9\u8c61\r\n                myChart: \'\',\r\n                //\u5f97\u5230\u5217\u957f\uff0c\u7f8e\u5316\u5c55\u793a\r\n                TableLength: 0,\r\n                //echart\u6570\u636e\r\n                chartData: [],\r\n                person_count: \'\',\r\n                //\u5982\u679c\u66f4\u65b0\u4e86sql\u8bed\u53e5\u6ca1\u6709\u68c0\u67e5\uff0c\u4e0d\u5141\u8bb8\u4fdd\u5b58\r\n                add_flag: true,\r\n                customQueryShowType: [\r\n                    \'\u5217\u8868\',\r\n                    \'\u6298\u7ebf\u56fe\',\r\n                    \'\u67f1\u72b6\u56fe\',\r\n                    \'\u997c\u56fe\',\r\n                ],\r\n                currentPage: 1,\r\n                //\u5f53\u524d\u81ea\u5b9a\u4e49\u67e5\u8be2\u5217\u8868\u72b6\u6001\uff1alist\u5217\u8868,edit\u4fee\u6539,add\u6dfb\u52a0\r\n                customQueryTableStatus: \'list\',\r\n                //\u5f53\u524d\u81ea\u5b9a\u4e49\u67e5\u8be2Table\u6240\u4f7f\u7528\u7684\u6570\u636e\u96c6\r\n                customQueryTableData: null,\r\n                //\u5f53\u524d\u6b63\u5728\u6dfb\u52a0\u6216\u4fee\u6539\u7684\u81ea\u5b9a\u4e49\u67e5\u8be2\u7684\u4fdd\u5b58\u5bf9\u8c61\r\n                customQueryData: {},\r\n                //\u81ea\u5b9a\u4e49\u67e5\u8be2\u7684\u540d\u79f0\u641c\u7d22\r\n                queryNameSearch: \'\',\r\n                //\u5f53\u524d\u6709\u591a\u5c11\u9875\r\n                queryCount: 0,\r\n            },\r\n            methods: {\r\n                //sql\u6d4b\u8bd5\r\n                sql_test() {\r\n                    var data = {\r\n                        \'conn_id\': this.customQueryData.conn_id,\r\n                        \'sql\': this.customQueryData.query_sql\r\n                    };\r\n                    axios({\r\n                        url: \'')
        __M_writer(unicode(SITE_URL))
        __M_writer(u'custom_query/sql_test\',\r\n                        method: \'post\',\r\n                        data: data\r\n                    }).then((res) => {\r\n                        console.log(res)\r\n                        if (res.data.result == \'error\') {\r\n                            this.$message.warning("\u60a8\u8f93\u5165SQL\u8bed\u53e5\u6709\u8bef!\u8bf7\u68c0\u67e5")\r\n                        } else {\r\n                            res = res.data.data\r\n                            vue.add_flag = true\r\n                            vue.fileds = []\r\n                            for (key in res[0]) {\r\n                                vue.fileds.push(key)\r\n                            }\r\n                            vue.TableLength = 1200 / vue.fileds.length\r\n                            if (vue.customQueryData.show_type == \'\u5217\u8868\') {\r\n                                vue.dialogVisible1 = true\r\n                                vue.tableData = res\r\n                            } else {\r\n                                if (vue.fileds.length > 2) {\r\n                                    this.$message.warning("\u76ee\u524d\u56fe\u8868\u529f\u80fd\u53ea\u652f\u6301\u4e8c\u7ef4\uff0c\u8bf7\u4fee\u6539SQL\u8bed\u53e5\uff01")\r\n                                } else {\r\n                                    vue.chartData = []\r\n                                    var name = ""\r\n                                    var value = ""\r\n                                    vue.dialogVisible2 = true\r\n                                    for (var i = 0; i < res.length; i++) {\r\n                                        for (var j = 0; j < vue.fileds.length; j++) {\r\n                                            if (!(parseFloat(res[i][vue.fileds[j]]).toString() == "NaN")&&res[i][vue.fileds[j]]<10000000){\r\n                                                value = vue.fileds[j]\r\n                                            } else {\r\n                                                name = vue.fileds[j]\r\n                                            }\r\n                                        }\r\n                                        vue.person_count = name\r\n                                        temp = {\r\n                                            \'name\': res[i][name],\r\n                                            \'value\': res[i][value]\r\n                                        }\r\n                                        vue.chartData.push(temp)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                },\r\n                //\u5b9a\u5236\u67e5\u8be2\u7684\u5c55\u793afunction\r\n                customQueryShow(row) {\r\n                    var data = {\r\n                        \'conn_id\': row.conn_id,\r\n                        \'sql\': row.query_sql\r\n                    };\r\n                    axios({\r\n                        url: \'')
        __M_writer(unicode(SITE_URL))
        __M_writer(u'custom_query/sql_test\',\r\n                        method: \'post\',\r\n                        data: data\r\n                    }).then((res) => {\r\n                        if (res.data.result == \'error\') {\r\n                            this.$message.warning("\u60a8\u8f93\u5165SQL\u8bed\u53e5\u6709\u8bef!\u8bf7\u68c0\u67e5")\r\n                        } else {\r\n                            res = res.data.data\r\n                            vue.add_flag = true\r\n                            vue.fileds = []\r\n                            for (key in res[0]) {\r\n                                vue.fileds.push(key)\r\n                            }\r\n                            vue.TableLength = 1200 / vue.fileds.length\r\n                            if (row.show_type == \'\u5217\u8868\') {\r\n                                vue.dialogVisible3 = true\r\n                                vue.tableData = res\r\n                            } else {\r\n                                vue.customQueryData.show_type=row.show_type\r\n                                if (vue.fileds.length > 2) {\r\n                                    this.$message.warning("\u76ee\u524d\u56fe\u8868\u529f\u80fd\u53ea\u652f\u6301\u4e8c\u7ef4\uff0c\u8bf7\u4fee\u6539SQL\u8bed\u53e5\uff01")\r\n                                } else {\r\n                                    vue.chartData = []\r\n                                    var name = ""\r\n                                    var value = ""\r\n                                    vue.dialogVisible4 = true\r\n                                    for (var i = 0; i < res.length; i++) {\r\n                                        for (var j = 0; j < vue.fileds.length; j++) {\r\n                                            if (!(parseFloat(res[i][vue.fileds[j]]).toString() == "NaN")&&res[i][vue.fileds[j]]<10000000) {\r\n                                                value = vue.fileds[j]\r\n                                            } else {\r\n                                                name = vue.fileds[j]\r\n                                            }\r\n                                        }\r\n                                        vue.person_count = name\r\n                                        temp = {\r\n                                            \'name\': res[i][name],\r\n                                            \'value\': res[i][value]\r\n                                        }\r\n                                        vue.chartData.push(temp)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                },\r\n                isNotANumber(inputData) {\r\n                    console.log(inputData)\r\n                    //isNaN(inputData)\u4e0d\u80fd\u5224\u65ad\u7a7a\u4e32\u6216\u4e00\u4e2a\u7a7a\u683c\r\n                    //\u5982\u679c\u662f\u4e00\u4e2a\u7a7a\u4e32\u6216\u662f\u4e00\u4e2a\u7a7a\u683c\uff0c\u800cisNaN\u662f\u505a\u4e3a\u6570\u5b570\u8fdb\u884c\u5904\u7406\u7684\uff0c\u800cparseInt\u4e0eparseFloat\u662f\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u6d88\u606f\uff0c\u8fd9\u4e2aisNaN\u68c0\u67e5\u4e0d\u4e25\u5bc6\u800c\u5bfc\u81f4\u7684\u3002\r\n                    if (parseFloat(inputData).toString() == "NaN") {\r\n                        return false;\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                }\r\n                ,\r\n                get_db_connections() {\r\n                    axios({\r\n                        url: \'')
        __M_writer(unicode(SITE_URL))
        __M_writer(u"db_connection/get_all_db_connection/',\r\n                        method: 'post',\r\n                    }).then((res) => {\r\n                        let json = [];\r\n\r\n                        if (res.data.results.length > 0) {\r\n                            for (let i = 0; i < res.data.results.length; i++) {\r\n                                let j = {};\r\n                                j.value = res.data.results[i].id;\r\n                                j.label = res.data.results[i].connname;\r\n                                json.push(j);\r\n                            }\r\n                            this.customQueryDatabase = json;\r\n                            console.log(this.customQueryDatabase);\r\n                        }\r\n\r\n                    }).catch((res) => {\r\n                        console.log('\u83b7\u53d6\u6570\u636e\u5e93\u8fde\u63a5\u9519\u8bef')\r\n                    })\r\n                }\r\n                ,\r\n                //\u5f39\u51fa\u9519\u8bef\u4fe1\u606f\r\n                customQueryPopupErrorMessage: function (msg) {\r\n                    this.$notify.error({\r\n                        title: '\u9519\u8bef',\r\n                        message: msg\r\n                    });\r\n                }\r\n                ,\r\n                //\u663e\u793a\u52a0\u8f7d\u4e2d..\r\n                customQueryPopupLoading: function () {\r\n                    //\u8fd4\u56de\u52a0\u8f7d\u6807\u8bb0\uff0c\u4f9b\u5916\u90e8\u5173\u95ed\r\n                    return this.$loading({\r\n                        lock: true,\r\n                        text: '\u6b63\u5728\u62fc\u547d\u52a0\u8f7d\u4e2d...',\r\n                        spinner: 'el-icon-loading',\r\n                        background: 'rgba(0, 0, 0, 0.7)'\r\n                    });\r\n                }\r\n                ,\r\n                //\u81ea\u5b9a\u4e49\u67e5\u8be2\u641c\u7d22\u65b9\u6cd5\r\n                customQuerySearch: function () {\r\n                    this.customQueryPageChange(1);\r\n                }\r\n                ,\r\n                //\u81ea\u5b9a\u4e49\u67e5\u8be2\u6dfb\u52a0\u9875\u9762\r\n                customQueryAdd: function () {\r\n                    this.customQueryTableStatus = 'add';\r\n                }\r\n                ,\r\n                //\u81ea\u5b9a\u4e49\u67e5\u8be2\u6570\u636e\u5206\u9875\u83b7\u53d6\r\n                customQueryPageChange: function (page) {\r\n                    const loading = this.customQueryPopupLoading();\r\n                    var data = {\r\n                        search: this.queryNameSearch,\r\n                        page: page,\r\n                        limit: 5\r\n                    };\r\n                    axios({\r\n                        method: 'post',\r\n                        url: '")
        __M_writer(unicode(SITE_URL))
        __M_writer(u"custom_query/select_queries_pagination',\r\n                        data: data\r\n                    }).then((res) => {\r\n                        loading.close();\r\n                        this.customQueryTableData = res.data.items;\r\n                        this.queryCount = res.data.pages;\r\n                        this.currentPage = page;\r\n                        if (page > res.data.pages) {\r\n                            this.currentPage = res.data.pages;\r\n                        }\r\n                    }).catch((res) => {\r\n                        loading.close();\r\n                        var msg = '\u81ea\u5b9a\u4e49\u67e5\u8be2\u4fe1\u606f\u52a0\u8f7d\u5931\u8d25\uff01';\r\n                        this.customQueryPopupErrorMessage(msg + res);\r\n                    });\r\n                }\r\n                ,\r\n                //\u81ea\u5b9a\u4e49\u67e5\u8be2\u7f16\u8f91\r\n                customQueryEdit: function (id) {\r\n                    const loading = this.customQueryPopupLoading();\r\n                    var url = '")
        __M_writer(unicode(SITE_URL))
        __M_writer(u"custom_query/select_query';\r\n                    var editData = {};\r\n                    editData.id = id;\r\n                    axios({\r\n                        method: 'post',\r\n                        url: url,\r\n                        data: editData,\r\n                    }).then((res) => {\r\n                        loading.close();\r\n                        this.customQueryData = res.data;\r\n                        this.customQueryTableStatus = 'edit';\r\n                    }).catch((res) => {\r\n                        loading.close();\r\n                        var msg = '\u83b7\u53d6\u81ea\u5b9a\u4e49\u67e5\u8be2\u6570\u636e\u5931\u8d25\uff01' + res;\r\n                        this.customQueryPopupErrorMessage(msg);\r\n                    });\r\n                }\r\n                ,\r\n                //\u81ea\u5b9a\u4e49\u67e5\u8be2\u5220\u9664\r\n                customQueryDelete: function (id) {\r\n                    const loading = this.customQueryPopupLoading();\r\n                    this.$confirm('\u786e\u8ba4\u5220\u9664\u81ea\u5b9a\u4e49\u67e5\u8be2\u4fe1\u606f\u5417?', '\u63d0\u793a', {\r\n                        confirmButtonText: '\u786e\u5b9a',\r\n                        cancelButtonText: '\u53d6\u6d88',\r\n                        type: 'warning',\r\n                        center: true\r\n                    }).then(() => {\r\n                        var url = '")
        __M_writer(unicode(SITE_URL))
        __M_writer(u"custom_query/del_query';\r\n                        var delData = {};\r\n                        delData.id = id;\r\n                        axios({\r\n                            method: 'post',\r\n                            url: url,\r\n                            data: delData,\r\n                        }).then((res) => {\r\n                            loading.close();\r\n                            if ('ok' == res.data.message) {\r\n                                this.customQueryPageChange(this.currentPage);\r\n                                this.$message({\r\n                                    type: 'success',\r\n                                    message: '\u5220\u9664\u81ea\u5b9a\u4e49\u67e5\u8be2\u6210\u529f!'\r\n                                });\r\n                            } else {\r\n                                var msg = '\u8bf7\u6c42\u5220\u9664\u81ea\u5b9a\u4e49\u67e5\u8be2\u5931\u8d25\uff01';\r\n                                this.customQueryPopupErrorMessage(msg + res.data.message);\r\n                            }\r\n                        }).catch((res) => {\r\n                            loading.close();\r\n                            var msg = '\u8bf7\u6c42\u5220\u9664\u81ea\u5b9a\u4e49\u67e5\u8be2\u5931\u8d25\uff01';\r\n                            this.customQueryPopupErrorMessage(msg + res);\r\n                        });\r\n                    }).catch(() => {\r\n                        loading.close();\r\n                        this.$message({\r\n                            type: 'info',\r\n                            message: '\u53d6\u6d88\u81ea\u5b9a\u4e49\u67e5\u8be2\u5220\u9664'\r\n                        });\r\n                    });\r\n                }\r\n                ,\r\n                //\u4fdd\u5b58\u81ea\u5b9a\u4e49\u67e5\u8be2\r\n                customQuerySave: function (formName) {\r\n                    if (!vue.add_flag) {\r\n                        this.$message({\r\n                            type: 'warning',\r\n                            message: '\u8bf7\u5148\u9a8c\u8bc1sql\u518d\u4fdd\u5b58!'\r\n                        });\r\n                    } else {\r\n                        const loading = this.customQueryPopupLoading();\r\n                        var url = '")
        __M_writer(unicode(SITE_URL))
        __M_writer(u'custom_query/add_query\';\r\n                        axios({\r\n                            method: \'post\',\r\n                            url: url,\r\n                            data: this.customQueryData,\r\n                        }).then((res) => {\r\n                            loading.close();\r\n                            if (\'ok\' == res.data.message) {\r\n                                if (this.customQueryTableStatus == \'edit\') {\r\n                                    this.customQueryPageChange(this.currentPage);\r\n                                } else if (this.customQueryTableStatus == \'add\') {\r\n                                    this.customQueryPageChange(res.data.total_pages);\r\n                                }\r\n                                this.customQueryList();\r\n                            } else {\r\n                                var msg = \'\u8bf7\u6c42\u6dfb\u52a0/\u4fee\u6539\u81ea\u5b9a\u4e49\u67e5\u8be2\u5931\u8d25\uff01\';\r\n                                this.customQueryPopupErrorMessage(msg + res);\r\n                            }\r\n                        }).catch((res) => {\r\n                            loading.close();\r\n                            var msg = \'\u8bf7\u6c42\u6dfb\u52a0/\u4fee\u6539\u81ea\u5b9a\u4e49\u67e5\u8be2\u5931\u8d25\uff01\';\r\n                            this.customQueryPopupErrorMessage(msg + res);\r\n                        });\r\n                    }\r\n                }\r\n                ,\r\n                //\u663e\u793a\u81ea\u5b9a\u4e49\u67e5\u8be2\u6e05\u5355\r\n                customQueryList: function () {\r\n                    this.customQueryData = {};\r\n                    this.customQueryTableStatus = \'list\';\r\n                }\r\n                ,\r\n                //Data\u5bf9\u8c61\u6839\u636e\u8868\u8fbe\u5f0f\u8f6c\u5b57\u7b26\u4e32\r\n                dataToString: function (fmt, date) {\r\n                    var o = {\r\n                        "M+": date.getMonth() + 1,                 //\u6708\u4efd\r\n                        "d+": date.getDate(),                    //\u65e5\r\n                        "h+": date.getHours(),                   //\u5c0f\u65f6\r\n                        "m+": date.getMinutes(),                 //\u5206\r\n                        "s+": date.getSeconds(),                 //\u79d2\r\n                        "q+": Math.floor((date.getMonth() + 3) / 3), //\u5b63\u5ea6\r\n                        "S": date.getMilliseconds()             //\u6beb\u79d2\r\n                    };\r\n                    if (/(y+)/.test(fmt))\r\n                        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + "").substr(4 - RegExp.$1.length));\r\n                    for (var k in o)\r\n                        if (new RegExp("(" + k + ")").test(fmt))\r\n                            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));\r\n                    return fmt;\r\n                }\r\n                ,\r\n                show_chart() {\r\n                    var chartData = vue.chartData\r\n                    var person_count = vue.person_count\r\n                    var chart_type = vue.customQueryData.show_type\r\n                    if (this.myChart != null && this.myChart != "" && this.myChart != undefined) {\r\n                        this.myChart.dispose();\r\n                    }\r\n                    console.log(chartData)\r\n                    if (chart_type == "\u997c\u56fe") {\r\n                        this.myChart = echarts.init(document.getElementById(\'show2\'), \'macarons\');\r\n                        var legendData = [];\r\n                        for (var i = 0; i < chartData.length; i++) {\r\n                            legendData.push(chartData[i].name)\r\n                        }\r\n                        option = {\r\n                            tooltip: {\r\n                                trigger: \'item\',\r\n                                formatter: "{a} <br/>{b} : {c} ({d}%)"\r\n                            },\r\n                            legend: {\r\n                                type: \'scroll\',\r\n                                orient: \'vertical\',\r\n                                right: 10,\r\n                                bottom: 50,\r\n                                data: legendData\r\n                            },\r\n                            series: [\r\n                                {\r\n                                    name: person_count,\r\n                                    type: \'pie\',\r\n                                    radius: \'50%\',\r\n                                    center: [\'50%\', \'30%\'],\r\n                                    data: chartData,\r\n                                    itemStyle: {\r\n                                        emphasis: {\r\n                                            shadowBlur: 10,\r\n                                            shadowOffsetX: 0,\r\n                                            shadowColor: \'rgba(0, 0, 0, 0.5)\'\r\n                                        }\r\n                                    },\r\n                                    avoidLabelOverlap: false,\r\n                                    label: {\r\n                                        normal: {\r\n                                            show: true,\r\n                                            position: \'inside\',\r\n                                            formatter: \'{c}\'\r\n                                        }\r\n                                    },\r\n                                    labelLine: {\r\n                                        normal: {\r\n                                            show: false\r\n                                        },\r\n                                        emphasis: {\r\n                                            show: true\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ]\r\n                        };\r\n                        this.myChart.setOption(option);\r\n                    }\r\n\r\n                    if (chart_type == "\u67f1\u72b6\u56fe") {\r\n                        myChart = echarts.init(document.getElementById(\'show2\'), \'macarons\');\r\n                        let barX = [];\r\n                        let barCount = [];\r\n                        for (var i = 0; i < chartData.length; i++) {\r\n                            this.$set(barX, i, chartData[i].name);\r\n                            this.$set(barCount, i, chartData[i].value);\r\n                        }\r\n                        option = {\r\n                            tooltip: {\r\n                                trigger: \'axis\',\r\n                                axisPointer: {            // \u5750\u6807\u8f74\u6307\u793a\u5668\uff0c\u5750\u6807\u8f74\u89e6\u53d1\u6709\u6548\r\n                                    type: \'shadow\'        // \u9ed8\u8ba4\u4e3a\u76f4\u7ebf\uff0c\u53ef\u9009\u4e3a\uff1a\'line\' | \'shadow\'\r\n                                }\r\n                            },\r\n                            barWidth: 15,\r\n                            legend: {\r\n                                data: [\'\u5df2\u6267\u884c\'],\r\n                                bottom: 10,\r\n                                right: 30\r\n                            },\r\n                            grid: {\r\n                                left: \'3%\',\r\n                                right: \'4%\',\r\n                                top: 10,\r\n                                containLabel: true\r\n                            },\r\n                            xAxis: {\r\n                                type: \'category\',\r\n                                data: barX\r\n                            },\r\n                            yAxis: {\r\n                                type: \'value\'\r\n                            },\r\n                            series: [\r\n                                {\r\n                                    name: person_count,\r\n                                    type: \'bar\',\r\n                                    stack: \'data\',\r\n                                    data: barCount\r\n                                },\r\n                            ]\r\n                        };\r\n                        myChart.setOption(option);\r\n                    }\r\n                    if (chart_type == "\u6298\u7ebf\u56fe") {\r\n                        myChart = echarts.init(document.getElementById(\'show2\'), \'macarons\');\r\n                        let lineX = [];\r\n                        let lineCount = [];\r\n                        for (var i = 0; i < chartData.length; i++) {\r\n                            this.$set(lineX, i, chartData[i].name);\r\n                            this.$set(lineCount, i, chartData[i].value);\r\n                        }\r\n                        option = {\r\n                            tooltip: {\r\n                                trigger: \'axis\'\r\n                            },\r\n                            legend: {\r\n                                data: [person_count]\r\n                            },\r\n                            calculable: true,\r\n                            xAxis: [\r\n                                {\r\n                                    type: \'category\',\r\n                                    boundaryGap: false,\r\n                                    data: lineX\r\n                                }\r\n                            ],\r\n                            yAxis: [\r\n                                {\r\n                                    type: \'value\'\r\n                                }\r\n                            ],\r\n                            series: [\r\n                                {\r\n                                    name: person_count,\r\n                                    type: \'line\',\r\n                                    smooth: true,\r\n                                    itemStyle: {normal: {areaStyle: {type: \'default\'}}},\r\n                                    data: lineCount,\r\n                                },\r\n                            ]\r\n                        };\r\n                        myChart.setOption(option);\r\n                    }\r\n                }\r\n                ,\r\n                isNotANumber(inputData) {\r\n                    //isNaN(inputData)\u4e0d\u80fd\u5224\u65ad\u7a7a\u4e32\u6216\u4e00\u4e2a\u7a7a\u683c\r\n                    //\u5982\u679c\u662f\u4e00\u4e2a\u7a7a\u4e32\u6216\u662f\u4e00\u4e2a\u7a7a\u683c\uff0c\u800cisNaN\u662f\u505a\u4e3a\u6570\u5b570\u8fdb\u884c\u5904\u7406\u7684\uff0c\u800cparseInt\u4e0eparseFloat\u662f\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u6d88\u606f\uff0c\u8fd9\u4e2aisNaN\u68c0\u67e5\u4e0d\u4e25\u5bc6\u800c\u5bfc\u81f4\u7684\u3002\r\n                    if (parseFloat(inputData).toString() == "NaN") {\r\n                        return false;\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                }\r\n            },\r\n            mounted() {\r\n                //this.loadAlertRuleInfo();\r\n                this.get_db_connections();\r\n                this.customQueryPageChange(1);\r\n            }\r\n        })\r\n    ;\r\n</script>\r\n\r\n</body>\r\n</html>')
        return ''
    finally:
        context.caller_stack._pop_frame()


"""
__M_BEGIN_METADATA
{"source_encoding": "utf-8", "line_map": {"16": 0, "23": 1, "24": 6, "25": 6, "26": 8, "27": 8, "28": 10, "29": 10, "30": 12, "31": 12, "32": 13, "33": 13, "34": 14, "35": 14, "36": 15, "37": 15, "38": 16, "39": 16, "40": 245, "41": 245, "42": 298, "43": 298, "44": 357, "45": 357, "46": 417, "47": 417, "48": 437, "49": 437, "50": 464, "51": 464, "52": 506, "53": 506, "59": 53}, "uri": "./custom_query/custom_query.html", "filename": "D:/py-workspace/LanhuSaas/framework/templates/custom_query/custom_query.html"}
__M_END_METADATA
"""
